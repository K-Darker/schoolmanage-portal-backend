<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<!-- 验证码 -->
	<servlet>
		<servlet-name>CodeImage</servlet-name>
		<servlet-class>
			com.schoolmanage.util.CodeImageServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>CodeImage</servlet-name>
		<url-pattern>/servlet/CodeImage</url-pattern>
	</servlet-mapping>
	<!-- 配置struts -->
	<servlet>
		<servlet-name>struts</servlet-name>
		<servlet-class>
			org.apache.struts.action.ActionServlet
		</servlet-class>
		<init-param>
			<param-name>config</param-name>
			<param-value>/WEB-INF/struts-config.xml</param-value>
		</init-param>
		<load-on-startup>0</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>struts</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	<!-- 配置加载spring -->
	<!--使用spring解决struts1.3乱码问题。-->

	<filter>
		<filter-name>encoding</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 指定spring的配置文件，默认从web根目录寻找配置文件，我们可以通过spring提供的classpath:前缀指定从类路径src下寻找 -->
	<!-- tomcat会在启动的时候解析struts-config文件 并实例化一个spring容器放入到 ServletContext中-->
	<!-- 还可以用ContextServlet加载不推荐 在有些服务器不支持listener方式只能用servlet方式 一般用listener 因为listener比servlet优先级高 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml,classpath*:META-INF/spring.xml</param-value><!-- 可以指定例/WEB-INF/.. -->
	</context-param>
	<!-- 对Spring容器进行实例化 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!--使用spring中的opensessioninview来解决懒加载的问题 本质是一个过滤器 
	<filter>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>-->
	
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>
